{"remainingRequest":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\ts-loader\\index.js??ref--10-3!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\tslint-loader\\index.js!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\src\\app\\app.service.ts","dependencies":[{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\src\\app\\app.service.ts","mtime":1536216234212},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536203874591},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\ts-loader\\index.js","mtime":1530127508000},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar AppService = /** @class */ (function () {\r\n    function AppService(http) {\r\n        this.http = http;\r\n        this.authenticated = false;\r\n    }\r\n    AppService.prototype.authenticate = function (credentials, callback) {\r\n        var _this = this;\r\n        var headers = new http_1.HttpHeaders(credentials ? {\r\n            authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password)\r\n        } : {});\r\n        this.http.get('user', { headers: headers }).subscribe(function (response) {\r\n            if (response['name']) {\r\n                _this.authenticated = true;\r\n            }\r\n            else {\r\n                _this.authenticated = false;\r\n            }\r\n            return callback && callback();\r\n        });\r\n    };\r\n    var _a;\r\n    AppService = tslib_1.__decorate([\r\n        core_1.Injectable(),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], AppService);\r\n    return AppService;\r\n}());\r\nexports.AppService = AppService;\r\n",{"version":3,"file":"C:\\Project\\JHipster\\oauth2-server-master\\web-app\\src\\app\\app.service.ts","sourceRoot":"","sources":["C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\node_modules\\tslint-loader\\index.js!C:\\Project\\JHipster\\oauth2-server-master\\web-app\\src\\app\\app.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA+D;AAG/D;IAIE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,kBAAa,GAAG,KAAK,CAAC;IAGtB,CAAC;IAED,iCAAY,GAAZ,UAAa,WAAW,EAAE,QAAQ;QAAlC,iBAeG;QAbG,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1C,aAAa,EAAG,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC;SACrF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAER,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAC,OAAO,SAAA,EAAC,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;YAC/C,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAClB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;iBAAM;gBACH,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;YACD,OAAO,QAAQ,IAAI,QAAQ,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IAEP,CAAC;;IAtBQ,UAAU;QADtB,iBAAU,EAAE;qEAKe,iBAAU,oBAAV,iBAAU;OAJzB,UAAU,CAwBtB;IAAD,iBAAC;CAAA,AAxBD,IAwBC;AAxBY,gCAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  authenticated = false;\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n        const headers = new HttpHeaders(credentials ? {\n            authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n        } : {});\n\n        this.http.get('user', {headers}).subscribe(response => {\n            if (response['name']) {\n                this.authenticated = true;\n            } else {\n                this.authenticated = false;\n            }\n            return callback && callback();\n        });\n\n    }\n\n}"]}]}